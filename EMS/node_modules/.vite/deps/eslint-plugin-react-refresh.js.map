{
  "version": 3,
  "sources": ["../../eslint-plugin-react-refresh/index.js"],
  "sourcesContent": ["\"use strict\";\nvar __defProp = Object.defineProperty;\nvar __getOwnPropDesc = Object.getOwnPropertyDescriptor;\nvar __getOwnPropNames = Object.getOwnPropertyNames;\nvar __hasOwnProp = Object.prototype.hasOwnProperty;\nvar __export = (target, all) => {\n  for (var name in all)\n    __defProp(target, name, { get: all[name], enumerable: true });\n};\nvar __copyProps = (to, from, except, desc) => {\n  if (from && typeof from === \"object\" || typeof from === \"function\") {\n    for (let key of __getOwnPropNames(from))\n      if (!__hasOwnProp.call(to, key) && key !== except)\n        __defProp(to, key, { get: () => from[key], enumerable: !(desc = __getOwnPropDesc(from, key)) || desc.enumerable });\n  }\n  return to;\n};\nvar __toCommonJS = (mod) => __copyProps(__defProp({}, \"__esModule\", { value: true }), mod);\n\n// src/index.ts\nvar src_exports = {};\n__export(src_exports, {\n  configs: () => configs,\n  default: () => src_default,\n  rules: () => rules\n});\nmodule.exports = __toCommonJS(src_exports);\n\n// src/only-export-components.ts\nvar reactComponentNameRE = /^[A-Z][a-zA-Z0-9]*$/u;\nvar onlyExportComponents = {\n  meta: {\n    messages: {\n      exportAll: \"This rule can't verify that `export *` only exports components.\",\n      namedExport: \"Fast refresh only works when a file only exports components. Use a new file to share constants or functions between components.\",\n      anonymousExport: \"Fast refresh can't handle anonymous components. Add a name to your export.\",\n      localComponents: \"Fast refresh only works when a file only exports components. Move your component(s) to a separate file.\",\n      noExport: \"Fast refresh only works when a file has exports. Move your component(s) to a separate file.\",\n      reactContext: \"Fast refresh only works when a file only exports components. Move your React context(s) to a separate file.\"\n    },\n    type: \"problem\",\n    schema: [\n      {\n        type: \"object\",\n        properties: {\n          allowExportNames: { type: \"array\", items: { type: \"string\" } },\n          allowConstantExport: { type: \"boolean\" },\n          customHOCs: { type: \"array\", items: { type: \"string\" } },\n          checkJS: { type: \"boolean\" }\n        },\n        additionalProperties: false\n      }\n    ]\n  },\n  defaultOptions: [],\n  create: (context) => {\n    const {\n      allowExportNames,\n      allowConstantExport = false,\n      customHOCs = [],\n      checkJS = false\n    } = context.options[0] ?? {};\n    const filename = context.filename;\n    if (filename.includes(\".test.\") || filename.includes(\".spec.\") || filename.includes(\".cy.\") || filename.includes(\".stories.\")) {\n      return {};\n    }\n    const shouldScan = filename.endsWith(\".jsx\") || filename.endsWith(\".tsx\") || checkJS && filename.endsWith(\".js\");\n    if (!shouldScan)\n      return {};\n    const allowExportNamesSet = allowExportNames ? new Set(allowExportNames) : void 0;\n    const reactHOCs = [\"memo\", \"forwardRef\", ...customHOCs];\n    const canBeReactFunctionComponent = (init) => {\n      if (!init)\n        return false;\n      if (init.type === \"ArrowFunctionExpression\")\n        return true;\n      if (init.type === \"CallExpression\" && init.callee.type === \"Identifier\") {\n        return reactHOCs.includes(init.callee.name);\n      }\n      return false;\n    };\n    return {\n      Program(program) {\n        let hasExports = false;\n        let hasReactExport = false;\n        let reactIsInScope = false;\n        const localComponents = [];\n        const nonComponentExports = [];\n        const reactContextExports = [];\n        const handleExportIdentifier = (identifierNode, isFunction, init) => {\n          if (identifierNode.type !== \"Identifier\") {\n            nonComponentExports.push(identifierNode);\n            return;\n          }\n          if (allowExportNamesSet == null ? void 0 : allowExportNamesSet.has(identifierNode.name))\n            return;\n          if (allowConstantExport && init && (init.type === \"Literal\" || // 1, \"foo\"\n          init.type === \"UnaryExpression\" || // -1\n          init.type === \"TemplateLiteral\" || // `Some ${template}`\n          init.type === \"BinaryExpression\")) {\n            return;\n          }\n          if (isFunction) {\n            if (reactComponentNameRE.test(identifierNode.name)) {\n              hasReactExport = true;\n            } else {\n              nonComponentExports.push(identifierNode);\n            }\n          } else {\n            if (init && init.type === \"CallExpression\" && // createContext || React.createContext\n            (init.callee.type === \"Identifier\" && init.callee.name === \"createContext\" || init.callee.type === \"MemberExpression\" && init.callee.property.type === \"Identifier\" && init.callee.property.name === \"createContext\")) {\n              reactContextExports.push(identifierNode);\n              return;\n            }\n            if (init && // Switch to allowList?\n            notReactComponentExpression.has(init.type)) {\n              nonComponentExports.push(identifierNode);\n              return;\n            }\n            if (reactComponentNameRE.test(identifierNode.name)) {\n              hasReactExport = true;\n            } else {\n              nonComponentExports.push(identifierNode);\n            }\n          }\n        };\n        const handleExportDeclaration = (node) => {\n          var _a, _b;\n          if (node.type === \"VariableDeclaration\") {\n            for (const variable of node.declarations) {\n              handleExportIdentifier(\n                variable.id,\n                canBeReactFunctionComponent(variable.init),\n                variable.init\n              );\n            }\n          } else if (node.type === \"FunctionDeclaration\") {\n            if (node.id === null) {\n              context.report({ messageId: \"anonymousExport\", node });\n            } else {\n              handleExportIdentifier(node.id, true);\n            }\n          } else if (node.type === \"CallExpression\") {\n            if (node.callee.type === \"CallExpression\" && node.callee.callee.type === \"Identifier\" && node.callee.callee.name === \"connect\") {\n              hasReactExport = true;\n            } else if (node.callee.type !== \"Identifier\") {\n              if (node.callee.type === \"MemberExpression\" && node.callee.property.type === \"Identifier\" && reactHOCs.includes(node.callee.property.name)) {\n                hasReactExport = true;\n              } else {\n                context.report({ messageId: \"anonymousExport\", node });\n              }\n            } else if (!reactHOCs.includes(node.callee.name)) {\n              context.report({ messageId: \"anonymousExport\", node });\n            } else if (((_a = node.arguments[0]) == null ? void 0 : _a.type) === \"FunctionExpression\" && node.arguments[0].id) {\n              handleExportIdentifier(node.arguments[0].id, true);\n            } else if (((_b = node.arguments[0]) == null ? void 0 : _b.type) === \"Identifier\") {\n              hasReactExport = true;\n            } else {\n              context.report({ messageId: \"anonymousExport\", node });\n            }\n          } else if (node.type === \"TSEnumDeclaration\") {\n            nonComponentExports.push(node.id);\n          }\n        };\n        for (const node of program.body) {\n          if (node.type === \"ExportAllDeclaration\") {\n            if (node.exportKind === \"type\")\n              continue;\n            hasExports = true;\n            context.report({ messageId: \"exportAll\", node });\n          } else if (node.type === \"ExportDefaultDeclaration\") {\n            hasExports = true;\n            const declaration = node.declaration.type === \"TSAsExpression\" || node.declaration.type === \"TSSatisfiesExpression\" ? node.declaration.expression : node.declaration;\n            if (declaration.type === \"VariableDeclaration\" || declaration.type === \"FunctionDeclaration\" || declaration.type === \"CallExpression\") {\n              handleExportDeclaration(declaration);\n            }\n            if (declaration.type === \"Identifier\") {\n              handleExportIdentifier(declaration);\n            }\n            if (declaration.type === \"ArrowFunctionExpression\") {\n              context.report({ messageId: \"anonymousExport\", node });\n            }\n          } else if (node.type === \"ExportNamedDeclaration\") {\n            if (node.exportKind === \"type\")\n              continue;\n            hasExports = true;\n            if (node.declaration)\n              handleExportDeclaration(node.declaration);\n            for (const specifier of node.specifiers) {\n              handleExportIdentifier(\n                specifier.exported.type === \"Identifier\" && specifier.exported.name === \"default\" ? specifier.local : specifier.exported\n              );\n            }\n          } else if (node.type === \"VariableDeclaration\") {\n            for (const variable of node.declarations) {\n              if (variable.id.type === \"Identifier\" && reactComponentNameRE.test(variable.id.name) && canBeReactFunctionComponent(variable.init)) {\n                localComponents.push(variable.id);\n              }\n            }\n          } else if (node.type === \"FunctionDeclaration\") {\n            if (reactComponentNameRE.test(node.id.name)) {\n              localComponents.push(node.id);\n            }\n          } else if (node.type === \"ImportDeclaration\" && node.source.value === \"react\") {\n            reactIsInScope = true;\n          }\n        }\n        if (checkJS && !reactIsInScope)\n          return;\n        if (hasExports) {\n          if (hasReactExport) {\n            for (const node of nonComponentExports) {\n              context.report({ messageId: \"namedExport\", node });\n            }\n            for (const node of reactContextExports) {\n              context.report({ messageId: \"reactContext\", node });\n            }\n          } else if (localComponents.length) {\n            for (const node of localComponents) {\n              context.report({ messageId: \"localComponents\", node });\n            }\n          }\n        } else if (localComponents.length) {\n          for (const node of localComponents) {\n            context.report({ messageId: \"noExport\", node });\n          }\n        }\n      }\n    };\n  }\n};\nvar notReactComponentExpression = /* @__PURE__ */ new Set([\n  \"ArrayExpression\",\n  \"AwaitExpression\",\n  \"BinaryExpression\",\n  \"ChainExpression\",\n  \"ConditionalExpression\",\n  \"Literal\",\n  \"LogicalExpression\",\n  \"ObjectExpression\",\n  \"TemplateLiteral\",\n  \"ThisExpression\",\n  \"UnaryExpression\",\n  \"UpdateExpression\"\n]);\n\n// src/index.ts\nvar rules = {\n  \"only-export-components\": onlyExportComponents\n};\nvar plugin = { rules };\nvar configs = {\n  recommended: {\n    plugins: { \"react-refresh\": plugin },\n    rules: { \"react-refresh/only-export-components\": \"error\" }\n  },\n  vite: {\n    plugins: { \"react-refresh\": plugin },\n    rules: {\n      \"react-refresh/only-export-components\": [\n        \"error\",\n        { allowConstantExport: true }\n      ]\n    }\n  }\n};\nvar src_default = { rules, configs };\n// Annotate the CommonJS export names for ESM import in node:\n0 && (module.exports = {\n  configs,\n  rules\n});\n"],
  "mappings": "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",
  "names": []
}
